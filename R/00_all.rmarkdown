---
title: "00_all"
format: html
editor: visual
---


## Introduction



---
title: "01_load"
format: html
editor: visual
---

## Load Data

```{r}
#| message: false
library("tidyverse")
library("readxl")
```

```{r}
raw_dir <- "../data/_raw/"
data_file <- "GSE182951_Counts_All_Samples.xlsx"
data_loc <- "https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE182951&format=file&file=GSE182951%5FCounts%5FAll%5FSamples%2Exlsx"

if (!dir.exists(raw_dir)){
  dir.create(path = raw_dir)
  }


if (!file.exists(str_c(raw_dir, data_file))){
  download.file(
    url = str_c(data_loc),
    destfile = str_c(raw_dir, data_file))
  }

expression_data = read_excel(str_c(raw_dir, data_file))
```

# **Creating the metadata**

The metadata was not available online, but based on the paper we know that:

1.  Each sample is paired like this: 1 & 2, 3 & 4, etc.
2.  Each sample pair is either pre-treatment or post-treatment. With uneven numbers = pre-treatment and uneven numbers = post-treatment.
3.  Samples: 1-12 belong to group A - pCR, the rest belong to group B - no pCR.

From this we can create a metadata table:

```{r}
meta_data <- data.frame(ID = 1:40) |> 
  
  #Adding pre/post treatment to the dataset
  mutate(Treatment = case_when(str_ends(ID,"[13579]") ~ "pre_treatment",
                               str_ends(ID,"[^13579]") ~ "post_treatment")) |>
  
  # Adding corresponding Person ID
  mutate(subject_ID = case_when(Treatment == "pre_treatment" ~ (ID+1)/2,
                                Treatment == "post_treatment" ~ ID/2)) |> 
  mutate(subject_ID = case_when(subject_ID < 10 ~ str_c("subject_0", subject_ID),
                                subject_ID >= 10 ~ str_c("subject_", subject_ID))) |> 
  #Adding pCR status
  mutate(pCR_status = case_when(ID <= 12 ~ "pCR",
                                ID > 12 ~ "no_pCR"))

write_csv(x = meta_data,
          file = "../data/meta_data.csv")
```

---
title: "02_clean"
format: html
editor: visual
---

# Cleaning the data

```{r}
#| echo: false
library("tidyverse")
```

```{r}
# First we explore the data
expression_data |> 
  sample_n(10)
```

**Columns:**

1.  **Name** which include the gene names.
2.  **Identifier** which includes a link to the ENSG identifier for the gene.
3.  40 columns for each sample. They start with 20756_0XX_genes - Total counts. Where XX is the number of the sample.

Our dataset does not includes any N/A values, so we do not need to take that into account when cleaning.

**Cleaning procedure:**

-   Create tidy data

-   Clean up names

```{r}
expression_data_long <- expression_data |> 
  
  #Pivot longer to make into tidy data set.
  pivot_longer(cols = starts_with("20756"),
               names_to = "Sample",
               values_to = "Count") |>
  
  # Change to sample number
  mutate(Sample = as.numeric(str_sub(Sample, 
                                     start = 7, 
                                     end = 9))) |>  
  # Rename Name column 
  rename("Gene" = "Name")
```

# Joining meta data and expression data

```{r}
# Connect the expression dataset Sample with the metadata set ID
full_expression_data <- full_join(x = expression_data_long, 
                                   y = meta_data, 
                                   join_by(Sample == ID))

write_csv(full_expression_data, 
          "../data/full_expression_data.csv")
```


```{r}
quarto::quarto_render(input = "00_all.qmd")
file.rename(from = "00_all.html",
            to = "../results/00_all.html")
```

