---
title: "03_describe"
format: html
editor: visual
---

```{r}
library(tidyverse)

  
```

```{r, fig.height=7.5, fig.width=5.4}
meta_data|>
  ggplot(aes(x = pCR_status, y = ID,  color = subject_ID))+ #change it to patient
  #scale_color_discrete(guide = FALSE)+
  scale_y_continuous(breaks = 1:40) +
  geom_hline(yintercept = 0)+
  geom_point(aes(shape = Treatment))+
  theme_minimal(base_size = 10)+
  coord_fixed(0.1)+
  scale_color_discrete(labels=c("patient_01","patient_02", "patient_03", "patient_04", "patient_05", "patient_06", "patient_07", "patient_08", "patient_09","patient_10","patient_11","patient_12","patient_13","patient_14", "patient_15", "patient_16", "patient_17", "patient_18", "patient_19", "patient_20" ))+
  theme(plot.margin = unit(
    c(0.5, 0.5, 0.5, 0.5), "cm"),panel.grid.major.x = element_blank(),# set tthe margins, top, left,... in cms in order
    panel.grid.minor.y = element_blank(),
    panel.grid.major.y = element_line(size =1),
    axis.text.x = element_text(vjust = 7, hjust= 0.5))+
  labs(x ="pCR Status", y ="Samples", title ="Samples per pCR status by Treatment", color ="Number of Patients")


```

```{r}

#blablabla
```

```{r}
full_expression_data |>
  group_by(Sample) |>
  summarise(av=mean(Count))|>
  mutate(Treatment = case_when(Sample %% 2 == 0  ~ "Post-treatment",
                         Sample %% 2 !=0 ~ "Pre-treatment"))
```

```{r, fig.height=6, fig.width=15}
library(patchwork)
p1 <- full_expression_data |>
  filter(pCR_status == "pCR" & subject_ID == "subject_02" & Count > 100 & Treatment == "pre_treatment" ) |>
  ggplot(aes(x = Gene , y = Count))+
  scale_y_continuous(breaks = seq(100, 29000, by = 2000))+
  geom_col()+
  theme_minimal(base_size = 10)+
  theme(plot.margin = unit(
    c(1, 0.5, 0.5, 1), "cm"),
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),# set tthe margins, top, left,... in cms in order
    panel.grid.minor.y = element_blank(),
    panel.grid.major.y = element_line(size =1))+
  theme(axis.text.x = element_blank())+
  labs( x ="Genes", y ="Total Counts", title ="pCR, patient1, 100>Counts, pre")

p2 <- full_expression_data |>
  filter(pCR_status == "pCR" & subject_ID == "subject_02" & Count > 100 & Treatment == "post_treatment" ) |>
  ggplot(aes(x = Gene , y = Count))+
  scale_y_continuous(breaks = seq(100, 1500, by = 100))+
  geom_col()+
  theme_minimal(base_size = 10)+
  theme(plot.margin = unit(
    c(1, 0.5, 0.5, 1), "cm"),
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),# set tthe margins, top, left,... in cms in order
    panel.grid.minor.y = element_blank(),
    panel.grid.major.y = element_line(size =1))+
  theme(axis.text.x = element_blank())+
  labs( x ="Genes", y ="Total Counts", title ="pCR, patient1, 100>Counts, post")



  
p1/p2


  
  
  
#  arrange(subject_ID)|>
 # select(subject_ID == "subject_01")

                             
```

```{r}
p3 <- full_expression_data |>
  filter(pCR_status == "no_pCR" & subject_ID == "subject_07" & Count > 500 & Treatment == "pre_treatment" ) |>
  ggplot(aes(x = Gene , y = Count))+
  scale_y_continuous(breaks = seq(100, 11000, by = 1000))+
  geom_col()+
  theme_minimal(base_size = 10)+
  theme(plot.margin = unit(
    c(1, 0.5, 0.5, 1), "cm"),
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),# set tthe margins, top, left,... in cms in order
    panel.grid.minor.y = element_blank(),
    panel.grid.major.y = element_line(size =1))+
  theme(axis.text.x = element_blank())+
  labs( x ="Genes", y ="Total Counts", title ="no_pCR, patient7, 100>Counts, pre")

p4 <- full_expression_data |>
  filter(pCR_status == "no_pCR" & subject_ID == "subject_07" & Count > 500 & Treatment == "post_treatment" ) |>
  ggplot(aes(x = Gene , y = Count))+
  scale_y_continuous(breaks = seq(100, 18000, by = 1000))+
  geom_col()+
  theme_minimal(base_size = 10)+
  theme(plot.margin = unit(
    c(1, 0.5, 0.5, 1), "cm"),
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),# set tthe margins, top, left,... in cms in order
    panel.grid.minor.y = element_blank(),
    panel.grid.major.y = element_line(size =1))+
  theme(axis.text.x = element_blank())+
  labs( x ="Genes", y ="Total Counts", title ="no_pCR, patient7, 100>Counts, post")

p3/p4
```

```{r, fig.height=6, fig.width=10}
full_expression_data |>
  group_by(Sample) |>
  summarise(av=mean(Count))|>
  mutate(Treatment = case_when(Sample %% 2 == 0  ~ "Post-treatment",
                         Sample %% 2 !=0 ~ "Pre-treatment")) |>
  ggplot(aes(x = Sample, y = av))+
  geom_hline(yintercept = 0)+
  scale_x_continuous(breaks = 1:40) +
  geom_col(aes(fill= Treatment))+
  theme_minimal(base_size = 12)+
  theme(plot.margin = unit(
    c(1, 0.5, 0.5, 1), "cm"),
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),# set tthe margins, top, left,... in cms in order
    panel.grid.minor.y = element_blank(),
    panel.grid.major.y = element_line(size =1))+
  theme(axis.text.x = element_text(vjust = 7, hjust= 0.4))+
  labs(title ="The Average Total Count in Samples by Treatment", x ="Samples", y ="Average Counts", legend ="Treatment")

```

```{r}
full_expression_data |>
  group_by(Sample) |>
  summarise(av=mean(Count))|>
  mutate(Treatment = case_when(Sample %% 2 == 0  ~ "Post-treatment",
                         Sample %% 2 !=0 ~ "Pre-treatment"))
```

```{r}
group1<- full_expression_data|>
  filter(Count > 1000 & pCR_status == "pCR")

group2 <-  full_expression_data|>
  filter(Count > 1000 & pCR_status == "no_pCR") 




```

```{r, fig.height=6, fig.width=18}

group2|>
  ggplot(aes(x = Gene, y = Count, fill=Treatment))+
  geom_col()+
  theme(axis.text.x = element_text(angle = 60, size=8))

plot2 <- group1|>
  ggplot(aes(x = Gene, y = Count))+
  geom_col()+
  theme(axis.text.x = element_text(angle = 60, size=4))


```

```{r}
full_expression_data|>
  filter(Count ==0 & pCR_status == "pCR")
```

```{r, fig.height=6, fig.width=10}
full_expression_data |>
  group_by(Sample) |>
  summarise(av=mean(Count))|>
  mutate(Treatment = case_when(Sample %% 2 == 0  ~ "Post-treatment",
                         Sample %% 2 !=0 ~ "Pre-treatment")) |>
  ggplot(aes(x = Sample, y = av))+
  scale_x_continuous(breaks = 1:40) +
  geom_boxplot()+
  theme_minimal(base_size = 12)+
  theme(plot.margin = unit(
    c(1, 0.5, 0.5, 1), "cm"),
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),# set tthe margins, top, left,... in cms in order
    panel.grid.minor.y = element_blank(),
    panel.grid.major.y = element_line(size =1))+
  theme(axis.text.x = element_text(vjust = 7, hjust= 0.4))+
  labs(title ="The Average Total Count in Samples by Treatment", x ="Samples", y ="Average Counts", legend ="Treatment")
```
